-- Check for missing values in all columns

SELECT COUNT(*) - COUNT(ride_id) ride_id,
 COUNT(*) - COUNT(rideable_type) rideable_type,
 COUNT(*) - COUNT(started_at) started_at,
 COUNT(*) - COUNT(ended_at) ended_at,
 COUNT(*) - COUNT(start_station_name) start_station_name,
 COUNT(*) - COUNT(start_station_id) start_station_id,
 COUNT(*) - COUNT(end_station_name) end_station_name,
 COUNT(*) - COUNT(end_station_id) end_station_id,
 COUNT(*) - COUNT(start_lat) start_lat,
 COUNT(*) - COUNT(start_lng) start_lng,
 COUNT(*) - COUNT(end_lat) end_lat,
 COUNT(*) - COUNT(end_lng) end_lng,
 COUNT(*) - COUNT(member_casual) member_casual
FROM rengin2.Google_Case.combined_data;

-- Check for duplicate rows
SELECT 
COUNT(ride_id) - COUNT(DISTINCT ride_id) AS duplicate_rows
FROM rengin2.Google_Case.combined_data;

-- Check for membership types
SELECT 
  COUNT(member_casual) AS number_of_membership
FROM rengin2.Google_Case.combined_data
WHERE
  member_casual = "casual" OR
  member_casual = "member" ;

-- Check whether all ride_ids are 16 digits
SELECT 
  COUNT(ride_id) as number_of_nonmatching_ride_id
FROM rengin2.Google_Case.combined_data
WHERE
  LENGTH(ride_id) != 16;

-- Explore the started_at and ended_at columns
SELECT 
started_at, ended_at
FROM rengin2.Google_Case.combined_data LIMIT 5;

-- Explore the bike types in the data set
SELECT 
  COUNT(ride_id) AS ride_id,
  rideable_type
FROM rengin2.Google_Case.combined_data
GROUP BY
  rideable_type;

-- Explore the trips that took longer than a day
SELECT COUNT(*) AS longer_than_a_day
FROM rengin2.Google_Case.combined_data
WHERE (
  EXTRACT(HOUR FROM (ended_at - started_at)) * 60 +
  EXTRACT(MINUTE FROM (ended_at - started_at)) +
  EXTRACT(SECOND FROM (ended_at - started_at)) / 60) >= 1440;

-- Explore the trips that took less than a minute
SELECT COUNT(*) AS less_than_a_minute
FROM rengin2.Google_Case.combined_data
WHERE (
  EXTRACT(HOUR FROM (ended_at - started_at)) * 60 +
  EXTRACT(MINUTE FROM (ended_at - started_at)) +
  EXTRACT(SECOND FROM (ended_at - started_at)) / 60) <= 1;
